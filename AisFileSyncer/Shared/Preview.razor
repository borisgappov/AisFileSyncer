@using AisFileSyncer.Infrastructure.Interfaces
@using AisFileSyncer.Infrastructure.Models
@inject IContentProvider _contentProvider

<div style="height: 50px;">
    @switch (_previewContent.contentType)
    {
        case ContentType.Image:
            <img src="@_previewContent.content" height="50px" @onclick="@OnClick" style="cursor:pointer"/>
            break;
        case ContentType.Text:
        case ContentType.Html:
            <div class="preview-text" @onclick="@OnClick">
                <pre>@_previewContent.content</pre>
            </div>
            break;
    }
</div>

@code {
    [Parameter]
    public string fileName { get; set; }

    [Parameter]
    public EventCallback<PreviewContent> OnClickCallback { get; set; }

    PreviewContent _previewContent = new PreviewContent();

    protected override void OnInitialized()
    {
        _previewContent.contentType = _contentProvider.GetContentType(fileName);
        if (_previewContent.contentType != ContentType.Unknown)
        {
            Task.Run(async () =>
            {
                _previewContent.content = await _contentProvider.GetContent(fileName);
            }).Wait();
        }
    }

    async Task OnClick()
    {
        await OnClickCallback.InvokeAsync(_previewContent);
    }
}
